{
  "name": "@flow-desk/desktop-app",
  "version": "0.1.0",
  "description": "Flow Desk Desktop Application (Electron)",
  "author": "Flow Desk Team <team@flowdesk.com>",
  "private": true,
  "main": "dist/desktop-app/src/main/main.js",
  "homepage": "./",
  "scripts": {
    "build": "npm run build:core",
    "build:core": "npm run build:renderer && npm run build:main:core",
    "build:full": "npm run build:rust && npm run build:renderer && npm run build:main",
    "build:rust": "npm run copy-rust-lib && npm run build:rust:current-platform",
    "build:rust:current-platform": "cd ../shared/rust-lib && cargo build --release --bin flow_desk_cli --features=cli",
    "build:rust:all-platforms": "node scripts/build-rust-all-platforms.js",
    "prebuild": "npm run clean:binaries",
    "clean:binaries": "rm -rf dist/binaries && mkdir -p dist/binaries",
    "copy-rust-lib": "mkdir -p src/lib/rust-engine && cp -r ../shared/rust-lib/* src/lib/rust-engine/ && mkdir -p src/lib/rust-integration",
    "build:main": "tsc --project tsconfig.main.json && npm run copy-rust-to-dist",
    "build:main:core": "npm run build:preload && tsc --project tsconfig.main.json",
    "copy-rust-to-dist": "mkdir -p dist/lib && cp -r src/lib/rust-engine dist/lib/ && mkdir -p dist/shared && npm run copy:binaries",
    "copy:binaries": "node scripts/copy-rust-binaries.js",
    "build:renderer": "vite build",
    "build:renderer:analyze": "vite build --mode analyze",
    "build:preload": "vite build --config vite.preload.config.ts",
    "dev": "npm run dev:with-rust",
    "dev:with-rust": "npm run build:rust:current-platform && npm run copy:binaries && concurrently \"npm run dev:renderer\" \"wait-on http://localhost:5173 && npm run dev:main:core\"",
    "dev:fast": "npm run dev:setup:minimal && concurrently \"npm run dev:renderer\" \"wait-on http://localhost:5173 && npm run dev:main:core\"",
    "dev:core": "npm run dev:setup:quick && concurrently \"npm run dev:renderer\" \"wait-on http://localhost:5173 && npm run dev:main:core\"",
    "dev:full": "npm run dev:setup:full && concurrently \"npm run dev:renderer\" \"wait-on http://localhost:5173 && npm run dev:main\"",
    "dev:setup:minimal": "node scripts/dev-setup-minimal.js",
    "dev:setup:quick": "node scripts/dev-setup-quick.js",
    "dev:setup:full": "node scripts/dev-setup.js",
    "dev:main": "npm run build:main && NODE_ENV=development electron dist/desktop-app/src/main/main.js --inspect=9229",
    "dev:main:core": "npm run build:main:core && NODE_ENV=development electron dist/desktop-app/src/main/main.js --inspect=9229",
    "dev:renderer": "vite",
    "start": "electron dist/main.js",
    "pack": "electron-builder",
    "dist": "npm run build && electron-builder",
    "dist:mac": "npm run build && electron-builder --mac",
    "dist:win": "npm run build && electron-builder --win",
    "dist:linux": "npm run build && electron-builder --linux",
    "lint": "eslint . --ext .ts,.tsx --fix",
    "type-check": "npm run type-check:core",
    "type-check:core": "tsc --noEmit && tsc -p tsconfig.main.json --noEmit",
    "type-check:full": "tsc --noEmit && tsc -p tsconfig.main.json --noEmit --skipLibCheck false",
    "test": "vitest",
    "test:watch": "vitest --watch",
    "security:check": "node scripts/security-check.js",
    "security:audit": "npm audit",
    "security:fix": "npm audit fix",
    "clean": "rm -rf dist build node_modules/.cache",
    "verify:build": "node scripts/verify-build.js",
    "test:distribution": "node scripts/test-distribution.js",
    "postbuild": "npm run verify:build",
    "prebuild:production": "npm run clean && npm run build:rust:all-platforms",
    "build:production": "npm run build:renderer && npm run build:main && npm run verify:build",
    "dist:production": "npm run prebuild:production && npm run build:production && electron-builder",
    "perf:analyze": "npm run build:renderer:analyze && npx vite-bundle-analyzer dist/renderer",
    "perf:profile": "NODE_ENV=production electron dist/main/main.js --enable-logging --v=1",
    "optimize:icons": "node scripts/analyze-icons.js",
    "optimize:bundle": "npm run optimize:icons && npm run build:renderer && npm run perf:analyze",
    "validate:platform": "node scripts/validate-cross-platform.js",
    "validate:prebuild": "node scripts/prebuild-platform-check.js",
    "rebuild:native": "npm rebuild && npm run copy:binaries"
  },
  "dependencies": {
    "@flow-desk/shared": "*",
    "crypto-js": "^4.2.0",
    "dayjs": "^1.11.18",
    "electron-log": "^5.2.4",
    "electron-store": "^10.0.0",
    "electron-updater": "^6.3.9",
    "keytar": "^7.9.0",
    "node-machine-id": "^1.1.12",
    "open": "^8.4.2",
    "react-window": "^2.0.2",
    "rxjs": "^7.8.1",
    "semver": "^7.6.3",
    "tar": "^7.4.3",
    "uuid": "^11.0.5",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@reduxjs/toolkit": "^2.4.0",
    "@testing-library/react": "^16.3.0",
    "@types/crypto-js": "^4.2.2",
    "@types/node": "^22.10.2",
    "@types/react": "^18.3.17",
    "@types/react-dom": "^18.3.1",
    "@types/react-window": "^1.8.8",
    "@types/semver": "^7.5.8",
    "@types/tar": "^6.1.13",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.15.0",
    "@typescript-eslint/parser": "^8.15.0",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.20",
    "babel-plugin-transform-remove-console": "^6.9.4",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "concurrently": "^9.1.0",
    "electron": "^33.4.11",
    "electron-builder": "^25.1.8",
    "eslint": "^9.17.0",
    "eslint-plugin-react": "^7.37.3",
    "eslint-plugin-react-hooks": "^5.0.0",
    "framer-motion": "^11.15.0",
    "lucide-react": "^0.468.0",
    "postcss": "^8.4.49",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-redux": "^9.2.0",
    "react-router-dom": "^7.1.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.7.3",
    "vite": "^6.0.7",
    "vite-bundle-analyzer": "^1.2.3",
    "vitest": "^2.1.8",
    "wait-on": "^8.0.1"
  },
  "rust-build": {
    "targets": {
      "darwin-x64": "x86_64-apple-darwin",
      "darwin-arm64": "aarch64-apple-darwin",
      "win32-x64": "x86_64-pc-windows-gnu",
      "win32-ia32": "i686-pc-windows-gnu",
      "linux-x64": "x86_64-unknown-linux-gnu"
    },
    "binary-name": "flow_desk_cli"
  },
  "build": {
    "appId": "com.flowdesk.desktop",
    "productName": "Flow Desk",
    "electronVersion": "33.4.11",
    "directories": {
      "output": "build"
    },
    "files": [
      "dist/**/*",
      "assets/**/*",
      "node_modules/**/*",
      "!dist/lib/rust-engine/target/**/*",
      "!dist/lib/rust-engine/src/**/*",
      "!dist/lib/rust-engine/Cargo.lock",
      "!dist/lib/rust-engine/build-script.sh",
      "!dist/lib/rust-engine/*.md"
    ],
    "extraResources": [
      {
        "from": "dist/binaries/",
        "to": "binaries/",
        "filter": [
          "**/*"
        ]
      }
    ],
    "extraMetadata": {
      "main": "dist/desktop-app/src/main/main.js"
    },
    "beforeBuild": "scripts/prebuild-platform-check.js",
    "mac": {
      "category": "public.app-category.productivity",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "asarUnpack": [
        "**/binaries/**/*"
      ]
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64",
            "ia32"
          ]
        }
      ],
      "asarUnpack": [
        "**/binaries/**/*"
      ]
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "Office",
      "asarUnpack": [
        "**/binaries/**/*"
      ]
    }
  }
}
