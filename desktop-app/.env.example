# =============================================================================
# Flow Desk Desktop App - Simple Email Configuration
# =============================================================================
# IMPORTANT: Copy this file to .env and configure as needed
# DO NOT commit the .env file to version control
#
# Flow Desk uses simple email + password authentication like Apple Mail
# No OAuth complexity - just email credentials stored securely

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
# Development/Production Environment
NODE_ENV=development

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# NOTE: Encryption keys are automatically generated and managed
# The application automatically:
# - Generates cryptographically secure encryption keys on first launch
# - Stores keys in platform-specific secure storage:
#   • Windows: Windows Credential Manager
#   • macOS: macOS Keychain Services  
#   • Linux: Secret Service API (libsecret) or encrypted file
# - Handles key rotation and backup capabilities
# - No manual configuration needed!

# Debug Mode (set to empty string for production)
DEBUG=flow-desk:*

# =============================================================================
# EMAIL PROVIDER CONFIGURATION
# =============================================================================
# Flow Desk automatically detects email providers and uses predefined
# IMAP/SMTP settings for popular providers like:
# - Gmail (imap.gmail.com:993, smtp.gmail.com:587)
# - Outlook (outlook.office365.com:993, smtp.office365.com:587)
# - Yahoo, Fastmail, ProtonMail Bridge, and others

# No API keys or OAuth configuration required!
# Users simply enter email + password like Apple Mail

# =============================================================================
# SUPPORTED EMAIL PROVIDERS
# =============================================================================
# The following providers are automatically configured:
#
# Gmail:
# - IMAP: imap.gmail.com:993 (SSL)
# - SMTP: smtp.gmail.com:587 (STARTTLS)
# - Note: Use App Passwords for Gmail accounts with 2FA
#
# Outlook/Microsoft 365:
# - IMAP: outlook.office365.com:993 (SSL)
# - SMTP: smtp.office365.com:587 (STARTTLS)
# - Supports both personal and business accounts
#
# Yahoo Mail:
# - IMAP: imap.mail.yahoo.com:993 (SSL)
# - SMTP: smtp.mail.yahoo.com:587 (STARTTLS)
# - Requires App Password (generate at account.yahoo.com)
#
# Fastmail:
# - IMAP: imap.fastmail.com:993 (SSL)
# - SMTP: smtp.fastmail.com:587 (STARTTLS)
#
# ProtonMail (requires Bridge):
# - IMAP: 127.0.0.1:1143 (requires ProtonMail Bridge)
# - SMTP: 127.0.0.1:1025 (requires ProtonMail Bridge)
#
# Custom IMAP providers:
# - Users can manually configure any IMAP/SMTP provider
# - Full manual configuration available for enterprise setups

# =============================================================================
# SECURITY BEST PRACTICES
# =============================================================================
# For Gmail users with 2FA:
# 1. Enable 2-Factor Authentication on your Google account
# 2. Generate an App Password at https://myaccount.google.com/apppasswords
# 3. Use the App Password instead of your regular password
#
# For Outlook users with 2FA:
# 1. Enable Modern Authentication (it's on by default)
# 2. Use your regular email password
# 3. For legacy setups, generate App Password in security settings
#
# For Yahoo users:
# 1. Generate App Password at https://login.yahoo.com/myaccount/security
# 2. Use App Password instead of regular password
#
# General Security:
# - All credentials are encrypted before storage
# - Use unique, strong passwords for email accounts
# - Enable 2FA on all email accounts
# - Regularly review connected applications in provider settings

# =============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# =============================================================================
# Before deploying to production, ensure:
# 
# 1. [ ] Set NODE_ENV=production
# 2. [ ] Clear DEBUG variable (DEBUG=)
# 3. [ ] Test with various email providers
# 4. [ ] Verify encryption is working properly
# 5. [ ] Enable security headers (CSP, HSTS, etc.)
# 6. [ ] Review storage permissions
# 7. [ ] Test credential storage on target platforms
# 8. [ ] Disable all console logging in production builds

# =============================================================================
# UNDERSTANDING THE ARCHITECTURE
# =============================================================================
# 1. Simple Email Setup:
#    - User enters email + password (like Apple Mail)
#    - App automatically detects provider (Gmail, Outlook, etc.)
#    - Predefined IMAP/SMTP settings are used
#    - Credentials are encrypted and stored securely
# 
# 2. No OAuth Complexity:
#    - No API keys or developer accounts needed
#    - No redirect URIs or OAuth flows
#    - No token refresh mechanisms
#    - Just direct IMAP/SMTP connections
# 
# 3. Security Model:
#    - Email credentials encrypted with platform keystore
#    - IMAP/SMTP connections use TLS/SSL
#    - No credentials transmitted to external services
#    - All processing happens locally

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# Common Issues:
# 
# 1. "Authentication failed" for Gmail:
#    - Use App Password instead of regular password if 2FA is enabled
#    - Check https://myaccount.google.com/lesssecureapps (if needed)
# 
# 2. "Connection failed" for Outlook:
#    - Ensure Modern Authentication is enabled
#    - For older accounts, may need App Password
#    - Check account type (personal vs business)
# 
# 3. "Server not found" errors:
#    - Check internet connection
#    - Verify email address is correct
#    - For custom providers, check server settings
# 
# 4. "SSL/TLS errors":
#    - Usually indicates server configuration issues
#    - Check if provider requires specific SSL settings
#    - Some corporate networks may block email ports
# 
# 5. ProtonMail connection issues:
#    - Ensure ProtonMail Bridge is installed and running
#    - Check Bridge is configured for IMAP access
#    - Verify Bridge credentials match app credentials

# =============================================================================
# SECURITY NOTES
# =============================================================================
# - Never commit .env file to version control
# - All email credentials are encrypted locally
# - No credentials are sent to external OAuth providers
# - Use App Passwords for accounts with 2FA enabled
# - Regularly update email account passwords
# - Monitor email account activity for suspicious access
# - Keep the application updated for security patches